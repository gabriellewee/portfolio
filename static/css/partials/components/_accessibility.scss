@use 'partials/shared/utilities' as *;

$tones: pink, blue, yellow;
@each $option in $tones {
	:root:has(#option-#{'' + $option}:checked) main ul[class^="tone"]:not(.tone-#{'' + $option}) {
		display: none;
	}
}
.option {
	@include hide;
}

.accessibility-popup {
	position: absolute;
	right: 0;
	opacity: 0;
	z-index: -1;
	@include viewport(medium) {
		position: relative;
		right: unset;
	}
	&:has(.popup-button:checked),
	&:has(.popup-button:focus),
	&:has(.popup-button:active),
	&:has(.popup-label:hover) {
		opacity: 1;
		z-index: unset;
		.popup-label {
			pointer-events: unset;
		}
	}
	.popup-button {
		&:checked, &:focus, &:active {
			~ .popup-label {
				pointer-events: unset;
			}
		}
		&:focus, &:active {
			~ .popup-label {
				.button::before {
					opacity: 1;
				}
			}
		}
	}
	.popup-label::after, .popup-window .inside {
		@include blur(10px, var(--color-iron), .45, .9, .8);
	}
	.popup-label {
		pointer-events: none;
		&::after {
			bottom: -24px;
			@media (prefers-reduced-motion: no-preference) {
				translate: 0 calc(var(--p)*2);
			}
		}
	}
	.popup-window {
		right: 0;
		left: unset;
		max-width: 360px;
		color: white;
		margin-top: var(--t);
		.inside {
			display: flex;
			flex-wrap: wrap;
			gap: calc(var(--p)*2);
			position: relative;
			width: 100%;
			padding: calc(var(--p)*2);
			@include border-radius(3px);
			div:has(.button) {
				@include viewport($iphone) {
					width: calc(50% - var(--p));
				}
			}
		}
		h4 {
			margin-bottom: calc(var(--p)*-.75);
			text-transform: uppercase;
			&:not(:first-of-type) {
				margin-top: calc(var(--p)*.75);
			}
		}
		h4, li {
			@include font-weight-width(500, 115);			
		}
		h4, p, menu, li:not(:has(.radio)) {
			width: 100%;
		}
		p {
			line-height: 1.4;
		}
		menu {
			display: flex;
			flex-wrap: wrap;
			gap: calc(var(--p)*2);
			list-style: none;
		}
		h4:has(+ menu:empty), menu:empty {
			display: none;
		}
		.option-no-js {
			@media (scripting: enabled) {
				display: none;
			}
		}
		.option-js {
			display: none;
			@media (scripting: enabled) {
				display: flex;
			}
		}
		.option-grouped {
			display: flex;
			flex-wrap: wrap;
			gap: calc(var(--p)*2);
		}
		.option:checked + .radio, .option:focus-visible + .radio {
			&::after {
				opacity: 1;
			}
		}
		.option:checked + label {
			.toggle {
				background-color: var(--background-active);
				&::after {
					translate: 100% 0;
				}
			}
		}
		.radio {
			@include tone(pink) {
				--color: var(--color-rose);
			}
			@include tone(blue) {
				--color: var(--color-glacier);
			}
			@include tone(yellow) {
				--color: color-mix(
					in srgb,
					var(--color-marzipan),
					var(--color-tigress)
				);
			}
		}
		.toggle {
			--outline: color-mix(in srgb, white, var(--background-active));
			@include tone(pink) {
				--background-active: var(--color-rose);
			}
			@include tone(blue) {
				--background-active: var(--color-glacier);
			}
			@include tone(yellow) {
				--background-active: color-mix(
					in srgb,
					var(--color-marzipan),
					var(--color-tigress)
				);
			}
		}
		.option-label {
			display: inline-flex;
			align-items: flex-start;
			align-content: center;
			justify-content: flex-start;
			font-size: 1.25rem;
			line-height: calc(var(--p)*2);
		}
		.button {
			--contrast: white;
			text-align: center;
			width: 100%;
		}
	}
	.popup-button:checked {
		+ .popup-label::after {
			rotate: 45deg;
		}
	}
}