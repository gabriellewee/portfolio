@use 'partials/shared/utilities' as *;

@mixin icon-setup($icon: expand, $width: 23px, $height: $width, $padding: var(--p), $hover: true, $position: 0% 0%, $touch: null) {
	@if $touch {
		--position: #{$touch};
		@if $hover == true {
			@include hover {
				--position: #{$position};
			}
		}
	} @else {
		--position: #{$position};
	}
	&::before, &::after {
		content: "";
		display: block;
	}
	&::before {
		position: absolute;
		z-index: 3;
		background-color: white;
		mask: url(/static/images/svg/icons/#{$icon}.svg) center / contain no-repeat;
		width: $width;
		height: $height;
		@if $touch {
			bottom: #{$padding};
			right: #{$padding};
			@if $hover == true {
				@include hover {
					top: #{$padding};
					left: #{$padding};
					bottom: unset;
					right: unset;
				}
			}
		} @else {
			top: #{$padding};
			left: #{$padding};
		}
	}
	&::after {
		--gradient-color: var(--background, hsl(from var(--color-dark-grey) h s calc(l * 0.8)));
		z-index: 2;
		background: radial-gradient(
			farthest-corner at var(--position),
			hsl(from var(--gradient-color) h s l / 0.8) 0,
			hsl(from var(--gradient-color) h s l / 0) calc(($width + $padding)*3)
		);
		mix-blend-mode: var(--blend-mode, multiply);
		@include full-offset(0);
	}
}

@mixin icon-invert {
	&::before {
		background-color: var(--color-dark-grey);
	}
}

@mixin expand-hover($icon: expand, $width: 23px, $height: $width, $padding: var(--p), $hover: true, $position: 0% 0%, $touch: null) {
	> *:only-child {
		@include icon-setup($icon, $width, $height, $padding, $hover, $position, $touch);
		&::before, &::after {
			transition: opacity .2s ease-out;
			@if $hover == true {
				@if $touch == true {
					@include hover {
						opacity: 0;
					}
				} @else {
					opacity: 0;
				}
			}
		}
	}
	&.light picture {
		@include icon-invert;
		&::after {
			--blend-mode: multiply;
		}
	}
	@if $hover == true {
		&:hover, &:focus {
			> *:only-child {
				&::before, &::after {
					opacity: 1;
				}
			}
		}
	}
}

@mixin recipe-button {
	--color-grey: var(--color-slate);
	--background: var(--color-grey) radial-gradient(
		circle at center right,
		color-mix(
			in srgb,
			var(--color-glacier),
			var(--color-mint)
		) 0,
		var(--color-mint) 25%,
		var(--color-grey) 75%,
		var(--color-grey) 100%
	);
	--outline: radial-gradient(
		circle at center left,
		light-dark(
			color-mix(in srgb, white 40%, var(--color-dark-grey)),
			color-mix(in srgb, white 60%, var(--color-mint))
		),
		light-dark(
			color-mix(in srgb, white 20%, var(--color-dark-grey)),
			color-mix(in srgb, white 90%, var(--color-mint))
		)
	);
	--background-hover-position: 100%;
	--background-active: var(--background-active-color) radial-gradient(
		circle at center left,
		light-dark(
			var(--color-dark-grey),
			color-mix(
				in srgb,
				var(--color-dark-grey) 80%,
				white
			)
		),
		light-dark(
			color-mix(
				in srgb,
				var(--color-dark-grey) 80%,
				white
			),
			var(--color-grey)
		)
	);
}


@mixin code {
	word-break: break-all;
	overflow-wrap: break-word;
	border-radius: 2px;
	padding-inline: 2px;
	background-color: hsl(from var(--color-primary) h s l / .1);
}