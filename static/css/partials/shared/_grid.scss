.grid {
	display: grid;
	grid-gap: $p*1.5;
	padding-left: $p*1.5;
	padding-right: $p*1.5;
	list-style: none;
}

.grid-isotope {
	display: grid;
	grid-template-columns: 1fr;
	position: relative;
	list-style: none;
	.grid-item {
		position: relative;
		width: 100%;
		overflow: hidden;
	}
}

@media only screen and (min-width: 1000px) {
	.grid-isotope {
		grid-template-columns: 1fr 1fr;
		&[style] .grid-item {
			width: 50%;
		}
	}
}

@media only screen and (min-width: 2000px) {
	.grid-isotope {
		grid-template-columns: 1fr 1fr 1fr;
		&[style] .grid-item {
			width: calc(100% / 3);
		}
	}
}

@media only screen and (min-width: 3000px) {
	.grid-isotope {
		grid-template-columns: 1fr 1fr 1fr 1fr;
		&[style] .grid-item {
			width: 25%;
		}
	}
}

.grid-item {
	figure {
		position: relative;
		font-style: italic;
		figcaption {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			overflow: hidden;
		}
		fieldset {
			display: flex;
			align-items: flex-end;
			justify-content: flex-end;
			width: 100%;
			height: 100%;
		}
		.upscale {
			image-rendering: pixelated;
		}
		.grid-close {
			position: absolute;
			top: 0;
			left: 0;
			z-index: 1;
			width: 100%;
			height: 100%;
		}
		label, .grid-link {
			cursor: pointer;
		}
		.grid-link, .grid-external {
			will-change: opacity;
			display: block;
			position: relative;
			z-index: 1;
			padding: $p/4;
		}
		.grid-link {
			padding: $p/2;
		}
		svg {
			display: block;
			width: 25px;
			height: 25px;
			group, path, polyline, polygon, circle, ellipse, rect {
				stroke-width: 7px;
			}
		}
		input {
			position: absolute;
			top: 0;
			left: 0;
			opacity: 0;
			z-index: -1;
			~ label.grid-link {
				display: none;
			}
			&:focus {
				~ .grid-link {
					box-shadow: inset 0 0 0 $p/4 $focus;
					opacity: 1;
				}
				~ dl {
					.grid-down {
						box-shadow: inset 0 0 0 $p/4 $focus;
					}
				}
			}
			&:checked {
				~ dl {
					transform: none;
					opacity: 1;
					z-index: 2;
				}
				~ .grid-close {
					z-index: unset;
				}
				~ .grid-link {
					opacity: 0;
				}
			}
		}
		dl {
			@include blur-all(5px, darken($iron, 10%), .9, .4);
			transform: translateY(25%);
			opacity: 0;
			z-index: 0;
			transition: all .3s ease-out;
			will-change: opacity, transform;
			position: absolute;
			bottom: 0;
			left: 0;
			width: 100%;
			padding: $p;
			font-size: 24px;
			color: white;
			.grid-down, .grid-external {
				position: absolute;
				right: 0;
				z-index: 1;
				padding: $p/2;
			}
			.grid-down {
				top: 0;
			}
			.grid-external {
				bottom: 0;
				&:focus {
					box-shadow: inset 0 0 0 $p/4 $focus;
				}
			}
			div {
				position: relative;
				z-index: 0;
			}
			dt, dd {
				display: inline;
			}
			dt {
				opacity: 0.7;
				font-weight: bold;
				&:after {
					content: ": "
				}
				&.title {
					display: none;
					+ dd {
						display: flex;
						align-items: center;
						justify-content: flex-start;
						font-size: 28px;
						font-weight: bold;
						font-style: normal;
						.grid-link {
							padding: 5px 0 0 $p/3;
						}
					}
				}
			}
		}
	}
}

@media only screen and (min-width: 600px) {
	.grid-item {
		figure {
			input ~ label.grid-link {
				opacity: 0;
			}
			&:hover input {
				~ label.grid-link {
					opacity: 1;
				}
				&:checked ~ label.grid-link {
					opacity: 0;
				}
			}
			input {
				~ label.grid-link {
					display: block;
				}
			}
		}
	}
}

.grid-filters {
	position: fixed;
	position: -webkit-sticky;
	position: sticky;
	bottom: 0;
	bottom: env(safe-area-inset-bottom);
	left: 0;
	z-index: 2;
	max-width: 100%;
	@media only screen and (min-width: 1000px) {
		padding: $p;
	}
	&, ul {
		display: flex;
		align-items: center;
	}
	ul {
		border-radius: $p/2;
		-webkit-clip-path: inset($p 0 $p 0 round $p/2 $p/2 $p/2 $p/2);
		clip-path: inset($p 0 $p 0 round $p/2 $p/2 $p/2 $p/2);
		list-style: none;
		padding: $p/2 $p/2 $p/2 0;
		overflow: auto;
		overflow: -moz-scrollbars-none;
		-ms-overflow-style: none;
		scrollbar-width: none;
		-webkit-overflow-scrolling: touch;
		::-webkit-scrollbar {
			height: 0;
			width: 0;
			display: none;
		}
	}
	li {
		will-change: opacity, transform;
		transition: .1s ease-out;
		transform: translateX(-100%);
		opacity: 0;
		visibility: hidden;
		padding: $p/2;
		&:first-child {
			padding-left: 0;
		}
		@for $i from 1 through 6 {
			&:nth-last-child(#{$i}) {
				transition-delay: ($i - 1) * .05s;
			}
		}
	}
	h2 {
		margin: 0 $p;
		text-transform: uppercase;
	}
	label, a {
		@include blur-all(5px, darken($iron, 10%), .9, .8);
		border-radius: $p/2;
		display: block;
		padding: $p $p*1.25;
		color: white;
	}
	a {
		will-change: background-color, transform;
		font-style: italic;
		transition: .1s ease-out;
		&.active:not(.reset) {
			@include blur-bg($mauve, .9, .8);
			color: white;
		}
		&:hover, &:focus {
			@include blur-bg($message, .9, .8);
			transform: scale(1.05);
			color: $iron;
		}
		&:focus {
			@include wavy;
			text-decoration-color: $iron;
		}
		&:active {
			@include blur-bg($mauve, .9, .8);
			transform: scale(0.95);
			color: white;
		}
	}
	label {
		display: flex;
		align-items: center;
		cursor: pointer;
		&:after {
			content: " ›";
			font-size: 24px;
			line-height: 19px;
			margin-top: -4px;
		}
	}
	input {
		position: absolute;
		top: 0;
		left: 0;
		opacity: 0;
		z-index: -1;
		&:focus {
			~ h2 > label {
				@include focus-round;
			}
		}
		&:checked {
			~ h2 > label {
				&:after {
					content: " ‹";
				}
			}
			~ ul {
				li {
					transform: translateX(0);
					opacity: 1;
					visibility: visible;
					@for $i from 1 through 6 {
						&:nth-child(#{$i}) {
							transition-delay: ($i - 1) * .05s;
						}
					}
				}
			}
		}
	}
}