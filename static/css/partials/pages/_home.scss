header {
	.go-home {
		display: none;
	}
}

.cursor {
	&:after {
		content: "_";
		will-change: opacity;
		animation: blink 1s cubic-bezier(1,0,0,1) infinite forwards;
		display: inline-block;
	}
}
@keyframes blink {
	from { opacity: 1 } to { opacity: 0 }
}

.grid-item {
	font-size: 28px;
	@media only screen and (min-width: 600px) {
		font-size: 32px;
	}
	&.text-only {
		padding: $p calc(#{$p*1.5} + env(safe-area-inset-left));
		@include max {
	 		padding: $p max(#{$p*1.5}, env(safe-area-inset-left));
	 	}
	}
	&.grid-only {
		h2 {
			padding: $p calc(#{$p*1.5} + env(safe-area-inset-left));
			@include max {
				padding: $p max(#{$p*1.5}, env(safe-area-inset-left));
			}
		}
	}
	.more {
		display: flex;
		align-items: center;
		justify-content: center;
		padding: $p*.5 $p $p;
		background: rgba(black, .5);
		font-size: 24px;
		font-style: italic;
		font-weight: bold;
		text-align: center;
		text-transform: lowercase;
		@media only screen and (min-width: 1000px) {
			font-size: 28px;
		}
		&:hover, &:focus {
			color: white;
			span {
				transform: scale(1.05);
			}
		}
		&:focus {
			@include wavy;
		}
		&:active {
			span {
				transform: scale(.95);
			}
		}
		span {
			will-change: transform;
			transition: .1s ease-out;
			display: block;
		}
	}
	&-intro {
		background: lighten($pink, 5%);
		color: $iron;
		padding-right: $p*5.5;
		@media only screen and (min-width: 600px) {
			padding-right: $p*5;
		}
		@media only screen and (min-width: 1000px) {
			padding-right: unset;
		}
		h1 {
			span {
				display: inline-block;
				font-weight: bold;
				font-style: italic;
			}
		}
		.apple {
			display: inline-block;
			svg {
				position: relative;
				top: 2px;
				width: 30px;
				height: 30px;
			}
		}
	}
	&-links {
		@import '../colors/links';
		background: white;
		font-size: 28px;
		a {
			will-change: transform;
			transition: .1s ease-out;
			display: inline-block;
			font-size: 40px;
			font-style: italic;
			font-weight: bold;
			&:not(:last-child) {
				margin-right: $p;
			}
			&:hover, &:focus {
				color: $iron;
				transform: scale(1.05);
			}
			&:focus {
				@include wavy;
			}
			&:active {
				transform: scale(0.95);
			}
		}
		p:not(:last-child) {
			padding-bottom: $p;
		}
		@media (prefers-color-scheme: dark) {
			background: darken($iron, 2%);
			color: white;
			a {
				&:hover, &:focus {
					color: white;
				}
			}
		}
	}
	&-code {
		@import '../colors/thumbnails';
		font-family: $mono;
		font-size: 16px;
		font-weight: bold;
		background: #253238;
		color: #73d1c8;
		@media (prefers-color-scheme: dark) {
			background: darken(#1e282c, 2%);
		}
		h2 {
			padding: $p*1.5 calc(#{$p*1.5} + env(safe-area-inset-left));
			@include max {
				padding: $p*1.5 max(#{$p*1.5}, env(safe-area-inset-left));
			}
		}
		p {
			padding: 0 calc(#{$p*1.5} + env(safe-area-inset-left)) $p;
			font-size: 24px;
			@include max {
				padding: 0 max(#{$p*1.5}, env(safe-area-inset-left)) $p;
			}
			a {
				color: #73d1c8;
				font-style: italic;
				font-weight: normal;
				&:hover, &:focus {
					color: #F78C6A;
					text-decoration: underline;
				}
				&:active {
					color: #82AAFF;
				}
			}
		}
		ul + p {
			padding-top: $p;
		}
		.css {
			color: #ffcb6b;
		}
		.animation {
			color: #c792ea;
		}
		.cubes {
			padding: 0 calc(#{$p*1.5} + env(safe-area-inset-left)) $p*1.5;
			@include max {
				padding: 0 max(#{$p*1.5}, env(safe-area-inset-left)) $p*1.5;
			}
			.cp_embed_wrapper {
				@include border-radius($p*.5);
			}
		}
		ul {
			grid-template-columns: repeat(auto-fill, minmax(150px,1fr));
			padding-bottom: $p*1.5;
			&.regular {
				@media only screen and (min-width: 600px) {
					grid-template-columns: repeat(auto-fill, minmax(200px,1fr));
					a {
						.overlay {
							font-size: 24px;
						}
					}
				}
			}
			&.ui {
				a {
					.overlay {
						flex-direction: column;
						span {
							&:first-child {
								font-size: 12px;
								font-weight: bold;
								font-style: normal;
							}
						}
					}
				}
			}
			a {
				will-change: transform;
				transition: .2s ease-out;
				display: block;
				border-radius: $p*.5;
				&:hover, &:focus {
					.overlay {
						opacity: 1;
					}
				}
				&:focus {
					@include focus-round;
				}
				&:active {
					transform: scale(0.95);
				}
				&, svg {
					display: block;
				}
				.inside {
					@include border-radius($p*.5);
					display: block;
					position: relative;
					&:before, &:after {
						@include blur-all(5px, white, .9, .8);
						display: block;
						position: absolute;
						z-index: 0;
						bottom: 0;
						padding: $p*.5 $p*.75;
						font-family: $faune;
						font-size: 12px;
						font-weight: bold;
						text-transform: uppercase;
					}
					&:before {
						left: 0;
						border-top-right-radius: $p*.5;
					}
					&:after {
						right: 0;
						border-top-left-radius: $p*.5;
					}
				}
				&.award {
					.inside:before {
						content: "Award";
					}
				}
				&.css-only {
					.inside::after {
						content: "CSS-only";
					}
				}
				&.dark {
					.overlay {
						color: $iron;
					}
				}
				.overlay {
					@include blur(5px);
					opacity: 0;
					will-change: opacity;
					transition: .2s ease-out;
					display: flex;
					align-items: center;
					justify-content: center;
					position: absolute;
					z-index: 1;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
					padding: $p $p*1.5;
					font-family: $faune;
					font-size: 20px;
					font-weight: normal;
					font-style: italic;
					text-align: center;
					color: white;
				}
			}
		}
	}
	&-photography, &-graphic, &-art {
		ul {
			grid-template-columns: repeat(2, 1fr);
			padding-bottom: $p*1.5;
		}
		picture {
			@include border-radius($p*.5);
			&, img {
				display: block;
				width: 100%;
			}
		}
		div {
			position: relative;
		}
	}
	&-photography {
		background: #8f9eb8;
		color: #121f2b;
		a {
			color: lighten(#8f9eb8, 5%);
			&:focus {
				text-decoration-color: lighten(#8f9eb8, 5%);
			}
		}
	}
	&-graphic {
		background: #c46465;
		color: white;
		a {
			color: $pink;
			&:focus {
				text-decoration-color: $pink;
			}
		}
	}
	&-art {
		background: $mauve;
		color: white;
		a {
			color: lighten(#938c8c, 10%);
			&:focus {
				text-decoration-color: lighten(#938c8c, 10%);
			}
		}
	}
	&-writing {
		background: #efd6cf;
		color: $iron;
		h2 {
			padding: $p calc(#{$p*1.5} + env(safe-area-inset-left));
			@include max {
				padding: $p max(#{$p*1.5}, env(safe-area-inset-left));
			}
		}
		div {
			padding: 0 calc(#{$p*1.5} + env(safe-area-inset-left)) $p;
			@include max {
				padding: 0 max(#{$p*1.5}, env(safe-area-inset-left)) $p;
			}
		}
		h3 {
			margin-bottom: $p/2;
			font-size: 24px;
			font-weight: bold;
			font-style: italic;
			text-transform: lowercase;
		}
		ul {
			list-style: none;
			li {
				display: flex;
				flex-flow: row wrap;
				align-items: center;
				align-content: center;
			}
		}
		a {
			@include border-radius($p*.25);
			will-change: background-color, color, transform;
			transition: .1s ease-out;
			display: block;
			padding: $p*.5 $p $p*.75;
			margin-bottom: $p;
			background-color: #dd7355;
			color: white;
			font-size: 24px;
			&:hover, &:focus {
				background-color: white;
				color: #dd7355;
			}
			&:not(:last-child) {
				margin-right: $p;
			}
			&.link {
				padding: $p*.5 $p;
				font-size: 18px;
				font-weight: bold;
				text-transform: uppercase;
			}
			&.link-podcasts {
				background-color: $ap;
				&:hover, &:focus {
					background-color: white;
					color: $ap;
				}
			}
			&.link-spotify {
				background-color: $sp;
				&:hover, &:focus {
					background-color: white;
					color: $sp;
				}
			}
			&.link-medium {
				background-color: $med;
				&:hover, &:focus {
					background-color: white;
					color: $med;
				}
			}
			&:active {
				background-color: rgba(black, .5)!important;
				color: white!important;
				transform: scale(0.975);
			}
		}
	}
	&-plants {
		background: #d1e7d6;
		color: #272f29;
		font-size: 24px;
		@media only screen and (min-width: 600px) {
			display: grid;
			grid-template-columns: 1fr 200px;
			grid-template-rows: 1fr 51px;
		}
		@media only screen and (min-width: 1500px) {
			font-size: 28px;
		}
		h2, a {
			padding: $p calc(#{$p*1.5} + env(safe-area-inset-left));
			@include max {
				padding: $p max(#{$p*1.5}, env(safe-area-inset-left));
			}
		}
		p {
			width: 100%;
			padding: 0 calc(#{$p*1.5} + env(safe-area-inset-left)) $p*1.5;
			@include max {
				padding: 0 max(#{$p*1.5}, env(safe-area-inset-left)) $p*1.5;
			}
		}
		span {
			font-style: italic;
			font-weight: bold;
		}
		.image {
			display: none;
			@media only screen and (min-width: 600px) {
				display: block;
			}
			@media only screen and (min-width: 1500px) {
				grid-row: span 2;
			}
		}
		.more {
			color: #8ec39a;
			grid-column: span 2;
			@media only screen and (min-width: 1500px) {
				grid-column: unset;
			}
			&:focus {
				text-decoration-color: #8ec39a;
			}
		}
	}
	&-gaming {
		background: #f0f0f0;
		color: #2d2d2d;
		@media only screen and (min-width: 600px) {
			display: flex;
			flex-flow: row wrap;
			justify-content: space-between;
		}
		h2 {
			position: relative;
			z-index: 1;
			padding-bottom: $p/3;
		}
		svg {
			display: block;
		}
		.friend-code {
			position: relative;
			z-index: 0;
			font-size: 20px;
			color: #717171;
			span {
				display: inline-block;
				background: white;
				color: #2d2d2d;
				border-radius: $p/3;
				padding: $p*.5 $p*.75;
			}
		}
		div {
			&:first-child {
				padding: $p calc(#{$p*1.5} + env(safe-area-inset-left)) 0;
				width: 100%;
				@include max {
					padding: $p max(#{$p*1.5}, env(safe-area-inset-left)) 0;
				}
				@media only screen and (min-width: 600px) {
					width: calc(100% - 200px);
				}
				@media only screen and (min-width: 1500px) {
					width: calc(100% - 255px);
				}
			}
			&:nth-child(2) {
				width: 100%;
				padding: $p*1.5 calc(#{$p*1.5} + env(safe-area-inset-left)) 0;
				@include max {
					padding: $p*1.5 max(#{$p*1.5}, env(safe-area-inset-left)) 0;
				}
				@media only screen and (min-width: 600px) {
					padding: $p*1.5 calc(#{$p*1.5} + env(safe-area-inset-left)) 0 0;
					@include max {
						padding: $p*1.5 max(#{$p*1.5}, env(safe-area-inset-left)) 0 0;
					}
					width: 200px;
				}
				@media only screen and (min-width: 1500px) {
					width: 255px;
				}
				svg {
					max-width: 255px;
					margin: 0 auto;
				}
			}
		}
		ul {
			display: grid;
			grid-template-columns: 1fr 1fr 1fr;
			grid-gap: $p*1.5;
			list-style: none;
			width: 100%;
			padding: $p*1.5 calc(#{$p*1.5} + env(safe-area-inset-left));
			@include max {
				padding: $p*1.5 max(#{$p*1.5}, env(safe-area-inset-left));
			}
			@media only screen and (min-width: 600px) {
				grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
			}
			svg {
				border-radius: $p*.5;
			}
		}
	}
}

