.posts-container {
	width: 100vw;
	max-width: var(--width);
	margin-left: auto;
	margin-right: auto;
	padding-left: env(safe-area-inset-left);
	padding-right: env(safe-area-inset-right);
	@include viewport($iphone-max) {
		padding-left: calc((var(--p)*2) + env(safe-area-inset-left));
		padding-right: calc((var(--p)*2) + env(safe-area-inset-right));
	}
}
.posts {
	display: grid;
	grid-gap: calc(var(--p)*2);
	margin-top: calc(var(--p)*2);
	grid-template-columns: 1fr;
	position: relative;
	list-style: none;
	&[style] {
		grid-gap: unset;
	}
	&:not([style]) {
		@include viewport(mobile) {
			.js & {
				grid-template-columns: repeat(12, 1fr);
			}
		}
	}
}

.filters {
	@include font-weight-width(600, 110);
	font-size: 1.5rem;
	line-height: 1.334;
	position: relative;
	padding-left: calc((var(--p)*2) + env(safe-area-inset-left));
	padding-right: calc((var(--p)*2) + env(safe-area-inset-right));
	@include viewport($iphone-max) {
		padding-left: 0;
		padding-right: 0;
	}

	h2 {
		@include hide;
	}
	ul {
		list-style: none;
		display: flex;
		flex-wrap: wrap;
	}
	li {
		margin-right: var(--p);
	}
	a {
		color: color-mix(
			in srgb,
			var(--color-iron) 70%,
			var(--color-white)
		);
		@media (prefers-reduced-motion: no-preference) {
			opacity: 0;
		}
		&:not(.reset):before {
			content: "#";
		}
		span, &:before {
			transition: .2s ease-out;
		}
		span {
			text-decoration: underline;
			text-decoration-thickness: 2px;
			text-underline-offset: 8px;
			text-decoration-color: gHSLa(blush, 1.1, 0);
			@include contrast(both, 2) {
				text-underline-offset: 4px;
				text-decoration-color: unset;
			}
		}
		&:hover, &:focus {
			color: color-mix(
				in srgb,
				var(--color-iron),
				var(--color-white)
			);
			span {
				text-decoration-color: color-mix(
					in srgb,
					var(--color-iron),
					var(--color-white)
				);
			}
		}
		&:hover, &:focus, &:active {
			span {
				text-underline-offset: 4px;
			}
		}
		&:focus-visible {
			@include focus-shadow(var(--color-rose));
		}
		&:active, &.active {
			color: gHSL(iron, .35);
		}
		&:active, &.active:hover, &.active:focus {
			span {
				text-decoration-color: gHSL(iron, .35);
			}
		}
		&.active {
			pointer-events: none;
		}
		&.reset {
			display: none;
			&.visible {
				display: block;
			}
		}
	}
}

.post-animate {
	@media (prefers-reduced-motion: no-preference) {
		opacity: 0;
	}
}

.post {
	position: relative;
	width: 100%;
	font-size: 1.125rem;

	@include viewport(mobile) {
		&:not([style]) {
			grid-column: 1 / span 12;
		}
	}

	&[data-orientation="portrait"] {
		@include viewport(mobile) {
			&:not([style]) {
				grid-column: 1 / span 6;
			}
			&[style] {
				width: calc(50% - var(--p));
			}
		}
	}

	&.post-size-xs {
		@include viewport(mobile) {
			&:not([style]) {
				grid-column: 1 / span 4;
			}
			&[style] {
				width: calc((100% / 3) - var(--p));
			}
		}
	}
	&.post-size-s {
		@include viewport(mobile) {
			&:not([style]) {
				grid-column: 1 / span 6;
			}
			&[style] {
				width: calc(50% - var(--p));
			}
		}
	}
	&.post-size-m {
		@include viewport(mobile) {
			&:not([style]) {
				grid-column: 1 / span 8;
			}
			&[style] {
				width: calc((100% / 3) * 2 - var(--p));
			}
		}
	}

	h1, h2, h3, h4, h5 {
		color: var(--color-primary);
	}

	.post-inner {
		overflow: hidden;
		background-color: var(--color-secondary);
		@include viewport($iphone-max) {
			@include clip-path-edges(2px);
		}
		@include viewport($iphone-max) {
			@include contrast(both, 2) {
				overflow: unset;
				position: relative;
				clip-path: unset;
				border-radius: unset;
				background-color: unset;
				&:before, &:after {
					content: "";
					display: block;
					position: absolute;
				}
				&:before {
					@include clip-path-edges(2.5px);
					z-index: -2;
					top: -1.5px;
					left: -1.5px;
					width: calc(100% + 3px);
					height: calc(100% + 3px);
				}
				&:after {
					@include clip-path-edges(2px);
					z-index: -1;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
				}
			}
		}
		&:before {
			@include contrast(light, 2) {
				background-color: var(--color-primary);
			}
			@include contrast(dark, 2) {
				background-color: color-mix(
					in srgb,
					var(--color-iron) 5%,
					var(--color-white)
				);
			}
		}
		&:after {
			background-color: var(--color-secondary);
		}
	}
	time {
		display: block;
		white-space: nowrap;
		&.time-default {
			@include button;
			@include font-weight-width(600, 90);
			position: relative;
			background-color: gHSLa(iron, .95, .75);
			text-transform: uppercase;
			@include contrast(both, 2) {
				background-color: unset !important;
				@include clip-path(false) {
					border-radius: unset;
				}
				@include clip-path {
					clip-path: unset;
				}
				&:before, &:after {
					content: "";
					display: block;
					position: absolute;
				}
				&:before {
					z-index: -2;
					top: calc(var(--p)/-8);
					left: calc(var(--p)/-8);
					width: calc(100% + var(--p)/4);
					height: calc(100% + var(--p)/4);
					background-color: var(--color-primary);
					@include clip-path(false) {
						@include border-radius(calc(var(--p)/4));
					}
					@include clip-path {
						@include button-shape(1.3125, 6%);
					}
				}
				&:after {
					z-index: -1;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
					background-color: var(--color-iron);
					@include clip-path(false) {
						@include border-radius(calc(var(--p)/2));
					}
					@include clip-path {
						@include button-shape;
					}
				}
			}
		}
	}
	.inline-header {
		padding: calc(var(--p)*2);
		@supports (container-type: inline-size) {
			container-type: inline-size;
			container-name: header;
		}
		.post-header-content {
			display: flex;
			flex-wrap: wrap;
			@include container(header, mobile, $container-mobile) {
				flex-wrap: nowrap;
				align-items: flex-start;
				justify-content: space-between;
			}
		}
		h2 {
			order: 2;
			width: 100%;
			@include container(header, mobile, $container-mobile) {
				order: 1;
				width: unset;
			}
			a {
				&:hover, &:focus {
					span {
						text-decoration: underline;
						text-underline-offset: 4px;
					}
				}
			}
		}
		time {
			order: 1;
			margin-bottom: calc(var(--p)*1.25);
			@include container(header, mobile, $container-mobile) {
				order: 2;
				margin-bottom: 0;
			}
		}
	}
}

.post-text {
	h1, h2, h3, h4, h5, h6 {
		@include font-weight-width(800, 120);
	}
	h1 {
		font-size: 2.25rem;
	}
	h2 {
		font-size: 1.625rem;
	}
	h3 {
		font-size: 1.375rem;
	}
	h1, h2, h3 {
		&[id] {
			display: flex;
			align-items: flex-start;
			align-content: flex-start;
			justify-content: space-between;
		}
	}
	.direct-link {
		@include font-weight-width(800, 100);
		opacity: .3;
		margin-left: var(--p);
		color: var(--color-primary);
		&:hover, &:focus {
			opacity: 1;
		}
	}

	hr {
		width: 100px;
		padding: 0;
		margin: calc(var(--p)*3) auto;
		border: 0;
		height: 2px;
		background-color: gHSLa(primary, 1, .2);
	}

	p:not(.codepen), blockquote, pre, ul, ol, figure {
		&:not(:last-child) {
			margin-bottom: .75em;
		}
	}
	h2, h3, h4, h5, h6 {
		&:not(:last-child) {
			margin-bottom: .5em;
		}
		&:not(:first-child) {
			padding-top: .75em;
		}
	}
	pre, figure {
		&:not(:last-child) {
			margin-bottom: 1.5em;
		}
		&:not(:first-child) {
			margin-top: 1.5em;
		}
	}

	a, pre, button {
		&:focus-visible {
			@include theme(light, 2) {
				@include focus-shadow(gHSLa(mauve, 1, .5));
			}
			@include theme(dark, 2) {
				@include focus-shadow(var(--color-mauve));
			}
		}
	}

	p, ol, ul {
		line-height: 1.334;
		font-weight: 400;
	}
	p, figcaption, ul, ol {
		a {
			@include gradient-text(
				var(--color-mauve),
				var(--color-slate),
				gHSLa(mauve, 1, .5)
			);
			position: relative;
			text-decoration: underline;
			text-decoration-thickness: 1.5px;
			text-underline-offset: 2px;
			@include theme(light, 2) {
				filter: unset;
			}
			@include theme(dark, 2) {
				filter: brightness(1.2);
			}
			&:hover, &:focus {
				@include gradient-text(
					var(--color-rose),
					var(--color-mauve),
					gHSLa(rose, 1, .5)
				);
			}
			&:active {
				@include theme(light, 2) {
					@include gradient-text(
						gHSL(iron, .95),
						gHSL(iron, .35),
						gHSLa(iron, .35, .5)
					);
				}
				@include theme(dark, 2) {
					@include gradient-text(
						var(--color-slate),
						color-mix(
							in srgb,
							var(--color-iron) 80%,
							var(--color-white)
						),
						gHSLa(slate, 1, .5)
					);
				}
			}
		}
	}
	p {
		> code {
			word-break: break-all;
			overflow-wrap: break-word;
			border-radius: 2px;
			padding-left: calc(var(--p)/6);
			padding-right: calc(var(--p)/6);
			background-color: gHSLa(iron, 1, .2);
			font-size: 1.0625rem;
		}
	}
	strong {
		font-weight: 800;
	}
	em {
		font-style: italic;
	}
	pre, p > code {
		font-family: var(--font-mono);
		font-weight: 400;
	}
	p > code {
		line-height: 1.412;
	}
	pre {
		@include clip-path-edges(2px);
		padding: calc(var(--p)*1.5) calc(var(--p)*2);
		color: white;
		font-size: 1rem;
		line-height: 1.5;
		@include theme(light, 2) {
			background-color: var(--color-iron);
		}
		@include theme(dark, 2) {
			background-color: gHSL(iron, .55);
		}
	}
	blockquote {
		@include font-weight-width(450, 110);
		quotes: auto;
		position: relative;
		font-size: 1.25rem;
		line-height: 1.334;
		@include viewport(mobile) {
			padding: 0 calc(var(--p)*2);
		}
		&:before, &:after {
			opacity: .2;
			display: block;
			position: absolute;
			font-size: 5rem;
			line-height: 1;
		}
		&:before {
			content: open-quote;
			content: open-quote / "";
			top: calc(var(--p)*-1.5);
			left: calc(var(--p)*-1.5);
			@include viewport(mobile) {
				left: calc(var(--p)*-.5);
			}
		}
		&:after {
			content: close-quote;
			content: close-quote / "";
			visibility: hidden;
			bottom: calc(var(--p)*-1.5);
			right: calc(var(--p)*-1.5);
			@include viewport(mobile) {
				right: calc(var(--p)*-.5);
			}
		}
		code {
			font-size: inherit;
			line-height: inherit;
		}
	}
	ul {
		list-style-type: circle;
	}
	ul, ol {
		padding-left: calc(var(--p)*2);
		ul, ol {
			padding-top: calc(var(--p)/2);
		}
		li {
			&:not(:last-child) {
				padding-bottom: calc(var(--p)/2);
			}
		}
	}
	.highlight {
		position: relative;
		padding: calc(var(--p)*1.5) calc(var(--p)*2);
		margin-bottom: calc(var(--p)*2);
		border-radius: 3px;
		background-color: gHSLa(primary, 1, .1);
		> * {
			font-weight: 450;
			code {
				font-weight: 700;
			}
		}
	}

	.expand {
		position: relative;
		transition: .2s ease-out;
		&:before {
			@include before;
			@include theme(light, 2) {
				background: radial-gradient(
					circle at center left,
					gHSLa(rose, 1, .5),
					gHSLa(mauve, 1, .5),
				);
			}
			@include theme(dark, 2) {
				background: radial-gradient(
					circle at center left,
					var(--color-rose),
					var(--color-mauve)
				);
			}
		}
		&:focus-visible {
			box-shadow: none;
			&:before {
				opacity: 1;
			}
		}
		&:active {
			@media (prefers-reduced-motion: no-preference) {
				scale: .98;
			}
		}
	}
	img, iframe {
		@include clip-path-edges(2px);
	}
	iframe {
		display: block;
		width: 100%;
	}

	.codepen {
		@include font-weight-width(700, 115);
		@include clip-path-edges(2px);
		display: flex;
		align-items: center;
		align-content: center;
		justify-content: center;
		padding: var(--p);
		height: var(--height);
		line-height: 1.4;
		@include theme(light, 2) {
			background-color: gHSLa(primary, 1, .1);
		}
		@include theme(dark, 2) {
			background-color: gHSLa(iron, .45, .5);
		}
		span {
			display: block;
			text-align: center;
			max-width: 500px;
		}
	}

	[class*="row"] {
		margin-bottom: calc(var(--p)*2);
		> *:not(:last-child) {
			margin-bottom: 0;
		}
	}
	.row-double, .row-triple, .row-quad, .row-quint {
		display: grid;
		grid-gap: calc(var(--p)*2);
		grid-template-columns: 1fr;
		@include viewport($mobile) {
			align-items: flex-start;
		}
		figure + figure {
			margin-top: 0;
		}
	}
	@include viewport($mobile) {
		.row-double {
			 grid-template-columns: repeat(2, 1fr);
		}
		.row-triple {
			 grid-template-columns: repeat(3, 1fr);
		}
		.row-quad {
			 grid-template-columns: repeat(4, 1fr);
		}
		.row-quint {
			 grid-template-columns: repeat(5, 1fr);
		}
	}

	.no-figcaption {
		figcaption {
			display: none;
		}
	}

	figcaption, p.caption {
		font-size: .875rem;
		line-height: 1.286;
		text-align: center;
		&:first-child, &:first-of-type:not(:first-child) {
			margin-bottom: calc(var(--p)/2);
		}
		&:last-child, &:last-of-type:not(:last-child) {
			margin-top: calc(var(--p)/2);
		}
		+ pre, + figure {
			margin-top: 0;
		}
	}
	p.caption:not(:last-child) {
		margin-bottom: calc(var(--p)/2);
	}
}

.button-social {
	line-height: 1.125;
	> span span {
		display: flex;
		align-items: flex-start;
		align-content: flex-start;
		&:before {
			content: "";
			display: block;
			transition: .2s ease-out;
			position: relative;
			z-index: 1;
			width: 18px;
			height: 18px;
			margin-right: calc(var(--p)/2);
			background-size: contain;
			background-repeat: no-repeat;
			background-position: top left;
		}
	}
}

.button-mastodon {
	&:before {
		background: radial-gradient(
			circle at center left,
			color-mix(
				in hsl,
				var(--color-mastodon),
				white
			),
			var(--color-mastodon-light)
		);
	}
	> span {
		background: radial-gradient(
			circle at center left,
			var(--color-mastodon-light) 0,
			var(--color-mastodon) 30%,
			var(--color-mastodon-dark) 60%,
			var(--color-mastodon-dark) 100%,
		) 50% 0% / 200% 100%;
		span:before {
			content: "";
			background-image: url(/static/images/svg/logos/mastodon-fill.svg);
		}
	}
	&:hover, &:focus {
		> span {
			background-position-x: 0%;
		}
	}
}