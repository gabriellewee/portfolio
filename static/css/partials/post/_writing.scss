.post-header {
	&.inline-header {
		padding-bottom: var(--p);
	}
	h2 {
		@include font-weight-width(800, 120);
		order: 2;
		width: 100%;
		font-size: 2rem;
		line-height: 1.1;
		@include viewport(mobile) {
			order: 1;
			width: unset;
			font-size: 2.25rem;
		}
		a {
			&, span, span span {
				transition: all .1s ease-out, box-shadow 0s;
			}
			> span {
				text-decoration: underline;
				text-underline-offset: 8px;
				text-decoration-color: gHSL(white, 1, 0);
				@include contrast(both, 2) {
					text-underline-offset: 4px;
				}
			}
			&:hover, &:focus, &:active {
				text-underline-offset: 4px;
			}
			&:hover, &:focus {
				> span {
					@include mix(
						color-mix(
							in hsl,
							hsl(var(--color-mauve-h) calc(var(--color-mauve-s) * .9) var(--color-mauve-l) / 1) 30%,
							hsl(var(--color-rose-h) calc(var(--color-rose-s) * .9) var(--color-rose-l) / 1)
						),
						mix($mauve, $rose)
					);
					text-decoration-color: var(--color-mix);
				}
			}
			&:focus-visible {
				@include contrast(both, 2) {
					@include focus-shadow(gHSL(mauve, 1, .5));
				}
			}
			&:active {
				@include theme(light, 2) {
					> span {
						text-decoration-color: gHSL(iron, .95);
					}
				}
				@include theme(dark, 2) {
					> span {
						text-decoration-color: var(--color-slate);
					}
				}
			}
		}
	}
	time {
		@include container(header, mobile, $container-mobile) {
			margin-left: var(--p);
		}
	}
}

&.post-blog {
	.post-header {
		h2 {
			a {
				@include contrast(both, 2) {
					> span {
						text-decoration-color: var(--color-mauve);
					}
				}
				span span {
					@include gradient-headline(
						var(--color-rose),
						var(--color-mauve),
						var(--color-slate),
						var(--color-slate)
					);
				}
				&:hover, &:focus {
					span span {
						background-position-x: 0%;
					}
				}
				&:active {
					span span {
						@include theme(light, 2) {
							@include gradient-text(
								gHSL(iron, .95),
								gHSL(iron, .35)
							);
						}
						@include theme(dark, 2) {
							@include mix(
								color-mix(
									in srgb,
									var(--color-iron) 80%,
									white
								),
								mix($iron, white, 80%)
							);
							@include gradient-text(
								var(--color-slate),
								var(--color-mix)
							);
						}
					}
				}
			}
		}
		time {
			background-color: hsl(var(--color-slate-h) calc(var(--color-slate-s) * .75) var(--color-slate-l) / 1);
			&:after {
				@include contrast(both, 2) {
					background-color: hsl(var(--color-slate-h) calc(var(--color-slate-s) * .75) var(--color-slate-l) / 1);
				}
			}
		}
	}
}

&.post-feature {
	.post-header {
		h2 {
			a {
				@include contrast(both, 2) {
					> span {
						text-decoration-color: var(--color-slate);
					}
				}
				span span {
					@include gradient-headline(
						var(--color-slate),
						var(--color-mauve),
						var(--color-rose),
						var(--color-rose),
						0%
					);
				}
				&:after {
					content: "â†—";
					position: relative;
					top: 2px;
					margin-left: calc(var(--p)/3*2);
					line-height: 1;
					@include mix(
						color-mix(
							in hsl,
							var(--color-mauve) 30%,
							var(--color-rose)
						),
						mix($mauve, $rose, 30%)
					);
					color: var(--color-mix);
				}
				&:hover, &:focus {
					span span {
						background-position-x: 50%;
					}
					&:after {
						color: var(--color-rose);
					}
				}
				&:active {
					span span {
						@include theme(light, 2) {
							@include gradient-text(
								gHSL(iron, .35),
								gHSL(iron, .95)
							);
						}
						@include theme(dark, 2) {
							@include mix(
								color-mix(
									in srgb,
									var(--color-iron) 80%,
									white
								),
								mix($iron, white, 80%)
							);
							@include gradient-text(
								var(--color-mix),
								var(--color-slate)
							);
						}
					}
					&:after {
						@include theme(light, 2) {
							color: gHSL(iron, .95);
						}
						@include theme(dark, 2) {
							color: var(--color-slate);
						}
					}
				}
			}
		}
		time {
			@include mix(
				color-mix(
					in srgb,
					hsl(var(--color-mauve-h) calc(var(--color-mauve-s) * .75) var(--color-mauve-l) / 1),
					gHSL(slate, .8)
				),
				mix(desaturate($mauve, 5%), $slate)
			);
			background-color: var(--color-mix);
			&:after {
				@include contrast(both, 2) {
					background-color: var(--color-mix);
				}
			}
		}
	}
	p, figcaption, ul, ol {
		a {
			@include gradient-text(
				var(--color-slate),
				var(--color-mauve),
				gHSL(slate, 1, .5)
			);
			&:hover, &:focus {
				@include gradient-text(
					var(--color-mauve),
					var(--color-rose),
					gHSL(mauve, 1, .5)
				);
			}
			&:active {
				@include theme(light, 2) {
					@include gradient-text(
						gHSL(iron, .35),
						gHSL(iron, .95),
						gHSL(iron, .35, .5)
					);
				}
				@include theme(dark, 2) {
					@include mix(
						color-mix(
							in srgb,
							var(--color-iron) 80%,
							white
						),
						mix($iron, white, 80%),
						mix-one
					);
					@include mix(
						color-mix(
							in srgb,
							gHSL(iron, 1, .5) 80%,
							gHSL(white, 1, .5)
						),
						rgba(mix($iron, white, 80%), .5),
						mix-two
					);
					@include gradient-text(
						var(--color-mix-one),
						var(--color-slate),
						var(--color-mix-two)
					);
				}
			}
		}
	}
}

&.post-archive {
	.post-header {
		h2 {
			a {
				@include theme(light, 2) {
					@include mix(
						color-mix(
							in srgb,
							var(--color-iron) 70%,
							white
						),
						mix($iron, white, 70%)
					);
					color: var(--color-mix);
				}
				@include theme(dark, 2) {
					@include mix(
						color-mix(
							in srgb,
							var(--color-iron),
							white
						),
						mix($iron, white)
					);
					color: var(--color-mix);
				}
				&:hover, &:focus {
					@include theme(light, 2) {
						@include mix(
							color-mix(
								in srgb,
								var(--color-iron),
								white
							),
							mix($iron, white)
						);
						color: var(--color-mix);
					}
					@include theme(dark, 2) {
						color: gHSL(white, 1, .7);
					}
				}
				&:active {
					@include theme(light, 2) {
						@include mix(
							color-mix(
								in srgb,
								var(--color-iron) 90%,
								white
							),
							mix($iron, white, 90%)
						);
						color: var(--color-mix);
					}
					@include theme(dark, 2) {
						@include mix(
							color-mix(
								in srgb,
								var(--color-iron) 70%,
								white
							),
							mix($iron, white, 70%)
						);
						color: var(--color-mix);
					}
				}
			}
		}
		time {
			@include mix(
				color-mix(
					in srgb,
					var(--color-iron) 60%,
					white
				),
				mix($iron, white, 60%)
			);
			background-color: var(--color-mix);
			&:after {
				@include contrast(both, 2) {
					background-color: var(--color-mix);
				}
			}
		}
	}
	.post-footer {
		.button {
			&:before {
				@include theme(light, 2) {
					@include mix(
						color-mix(
							in srgb,
							var(--color-iron) 70%,
							white
						),
						mix($iron, white, 70%),
						mix-one
					);
					@include mix(
						color-mix(
							in srgb,
							var(--color-iron) 80%,
							white
						),
						mix($iron, white, 80%),
						mix-two
					);
					background: radial-gradient(
						circle at center left,
						var(--color-mix-one),
						var(--color-mix-two)
					);
				}

				@include theme(dark, 2) {
					@include mix(
						color-mix(
							in srgb,
							var(--color-iron) 10%,
							white
						),
						mix($iron, white, 10%),
						mix-one
					);
					@include mix(
						color-mix(
							in srgb,
							var(--color-iron) 30%,
							white
						),
						mix($iron, white, 30%),
						mix-two
					);
					background: radial-gradient(
						circle at center left,
						var(--color-mix-one),
						var(--color-mix-two)
					);
				}
			}
			> span {
				@include mix(
					color-mix(
						in srgb,
						var(--color-iron) 70%,
						white
					),
					mix($iron, white, 70%)
				);
				background: var(--color-mix);
			}
			&:hover, &:focus {
				> span {
					@include mix(
						color-mix(
							in srgb,
							var(--color-iron),
							white
						),
						mix($iron, white)
					);
					background: var(--color-mix);
				}
			}
		}
	}
}

.post-footer {
	display: flex;
	flex-flow: row wrap;
	&:not(:empty) {
		margin-top: calc(var(--p)*-1.5);
		padding: 0 calc(var(--p)*2) calc(var(--p)*2);
	}
	.button {
		margin-top: var(--p);
		line-height: 1.334;
		&:not(:last-child) {
			margin-right: var(--p);
		}
	}
}

.post-content {
	&:empty + .post-footer {
		margin-top: 0;
	}

	&:not(:empty) {
		padding: 0 calc(var(--p)*2) calc(var(--p)*2);
	}
}