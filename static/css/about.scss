@use 'partials/shared/utilities' as *;
@use 'partials/components/links';
@use 'partials/components/swatch';
@use 'partials/components/tooltip';
@use 'partials/post/post';

.post {
	.post-inner {
		padding: calc(var(--p)*1.5) calc(var(--p)*2);
	}
	h2, h3 {
		@include font-weight-width(800, 120);
	}
	h2 {
		font-size: 2.25rem;
		margin-bottom: var(--p);
	}
	h3 {
		font-size: 1.5rem;
		margin-bottom: .375rem;
	}
	.post-content {
		padding: 0;
	}
	ol, ul {
		list-style: none;
	}
	li {
		position: relative;
		z-index: 1;
	}
	.post-content {
		a {
			font-weight: 600;
		}
	}

	.list, .grid {
		margin: 0;
		padding: 0 0 calc(var(--p)/2);
	}

	.list {
		li:not(:last-child) {
			padding-bottom: calc(var(--p)*1.5);
			@include viewport(medium) {
				padding-bottom: calc(var(--p)*1.25);
			}
		}
	}

	.grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
		grid-auto-rows: 1fr;
		grid-gap: calc(var(--p)*2);
		padding-top: calc(var(--p)/2);
	}
}

.post-build {
	h3 {
		margin-bottom: .5rem;
	}
	ul {
		padding: 0;
	}
	li {
		display: inline;
		&:not(:last-child) {
			&::after {
				content: "\00B7";
				display: inline-block;
				font-weight: 800;
				margin-inline: calc(var(--p)/2);
			}
		}
	}
}

.post-versions {
	.post-inner {
		padding-bottom: calc(var(--p)*2);
	}
	ol {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
		grid-gap: calc(var(--p)*2);
		padding-top: calc(var(--p)/2);
	}
	.link-thumbnail {
		--radius: 6%;
		--radius-outline: 6.5%;
		@include square(100%);
		.icon-wrapper {
			@include square(100%);
		}

		.icon-copy {
			span {
				display: block;
				font-size: 2.5rem;
				@include font-weight-width(800, 120);
			}
		}
	}
}

.post-sitemap {
	.post-inner {
		padding-bottom: var(--p);
	}
	.button-reduced {
		--background: color-mix(
			in srgb,
			var(--color-iron) 40%,
			var(--color-slate)
		);
		--background-hover: color-mix(
			in srgb,
			hsl(from var(--color-slate) h calc(s * .3) l) 30%,
			var(--color-mauve)
		);
		@include font-weight-width(500, 115);

		&.current span {
			@include theme(light) {
				background-color: color-mix(
					in srgb,
					var(--color-secondary) 20%,
					var(--background)
				);
			}
			@include theme(dark) {
				background-color: color-mix(
					in srgb,
					var(--color-secondary) 70%,
					var(--background)
				);
			}
		}
	}
}

.post-swatches {
	.post-inner {
		padding-bottom: var(--p);
	}
	ul {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(78px, 1fr));
		grid-gap: var(--p);
	}
	li {
		margin-bottom: var(--p);
	}
}

.post-resume {
	.buttons {
		display: flex;
		flex-direction: column;
		justify-content: center;
		height: 100%;
		li:not(:first-child) {
			margin-top: var(--p);
		}
		a {
			width: fit-content;
		}
	}
}

.post-mentions {
	a {
		text-decoration: underline;
		text-decoration-thickness: 1.5px;
		text-underline-offset: 2px;

		&:focus-visible {
			@include theme(light) {
				@include focus-shadow(hsl(from var(--color-mauve) h s l / .5));
			}
			@include theme(dark) {
				@include focus-shadow(var(--color-mauve));
			}
		}
	}
}

.post-features {
	.link-tile {
		--background: linear-gradient(
			135deg,
			hsl(from var(--color-mauve) h s l / .15),
			hsl(from color-mix(in srgb, var(--color-mauve), var(--color-slate)) h s l / .15)
		);

		@include contrast(light) {
			--background: hsl(from var(--color-mauve) h s l / .075);
			--contrast-outline: color-mix(
				in srgb,
				var(--color-mauve) 80%,
				var(--color-iron)
			);
			--contrast-background: color-mix(
				in srgb,
				var(--color-mauve) 7.5%,
				white
			);
		}
		@include contrast(dark) {
			--background: hsl(from var(--color-mauve) h s calc(l * .55) / .15);
			--contrast-outline: color-mix(
				in srgb,
				var(--color-mauve),
				white
			);
			--contrast-background: color-mix(
				in srgb,
				var(--color-mauve) 15%,
				var(--color-iron)
			);
		}
		a {
			&:active {
				@include gradient-text(
					hsl(from var(--color-slate) h s calc(l * .95)),
					hsl(from var(--color-slate) h s calc(l * .35)),
					hsl(from var(--color-slate) h s calc(l * .95) / .5)
				);
			}
		}
		p {
			@include theme(light) {
				--color: hsl(from var(--color-mauve) h s l / .8);
			}
			@include theme(dark) {
				--color: var(--color-mauve);
			}
		}
	}
}